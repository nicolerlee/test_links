services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: miniprogram_mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: miniprogram_manager
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'
    networks:
      - miniprogram_network
    restart: unless-stopped

  # FastAPI后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: miniprogram_backend
    environment:
      DATABASE_URL: mysql+pymysql://app_user:app_password@mysql:3306/miniprogram_manager
      DEBUG: "False"
      HOST: 0.0.0.0
      PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    networks:
      - miniprogram_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    command: python main.py

  # Vue3前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: miniprogram_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - miniprogram_network
    restart: unless-stopped

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: miniprogram_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - miniprogram_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  miniprogram_network:
    driver: bridge 